{
  "name": "dpd-openshift-start-script",
  "version": "2.2.0",
  "description": "Node module that wrap around configuring and starting deployd instance on localhost and openshift in a lazy way.",
  "main": "server.js",
  "scripts": {
    "test": "echo \"Error: no test specified, there will be tests soon. \" && exit 1",
    "start": "node index.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ipepe/dpd-openshift-start-script.git"
  },
  "keywords": [
    "dpd",
    "deployd",
    "openshift",
    "script",
    "start",
    "server"
  ],
  "author": {
    "name": "Patryk \"ipepe\" Ptasiński npmjs@ipepe.pl"
  },
  "license": "Apache License v2",
  "bugs": {
    "url": "https://github.com/ipepe/dpd-openshift-start-script/issues"
  },
  "homepage": "https://github.com/ipepe/dpd-openshift-start-script",
  "dependencies": {
    "colors": "1.0.3"
  },
  "gitHead": "64c139aac3c36b27cf7b6702eaacea10b3df63a1",
  "readme": "# dpd-openshift-start-script\nNode module that wrap around configuring and starting deployd instance on localhost and openshift in a lazy way.\n\n# credits\nBased on code: schettino72\n\nhttp://blog.schettino72.net/posts/mongodb-setup-deployd-heroku.html\n\n# pre-usage\nInstall mongodb:\n\nhttp://docs.mongodb.org/manual/installation/\n\nYou should have configured database with login/pass/database name: deployd/deployd/deployd. To configure run in bash:\n```bash\nmongo shell\n```\n\ncreate user deployd with password deployd in database name: deployd\n```javascript\nuse admin\ndb.addUser( { user: \"deployd\", pwd: \"deployd\", roles: [ \"userAdminAnyDatabase\" ] } )\nuse deployd\ndb.addUser( { user: \"deployd\", pwd: \"deployd\", roles: [ \"readWrite\", \"dbAdmin\" ] } )\n```\n\n# usage for v2.x\nMongoDB start (or have you should have it running as a service)\n\n```bash\nsudo mongod\n```\n\nCreate an index.js file in Your project:\n\n```javascript\n// ==================== Load/start dependencies\nvar deployd_setup = require('dpd-openshift-start-script');\nvar deployd_instance = deployd_setup(); //starting deployd server, also this object contains everything included into starting server\nvar colors = deployd_instance.colors; //colors dependency\n\n//...\nconsole.log('You started deployd server by: ' + colors.magenta('dpd-openshift-start-script'));\n\n```\n\nObjects returned:\n```javascript\nmodule.exports = function () {\n\treturn {\n\t\tdeployd: server,\n\t\tserver_env: server_env,\n\t\tserver_port: server_port,\n\t\tserver_ip_address: server_ip_address,\n\t\tdb_ip_address: db_ip_address,\n\t\tdb_url_address: db_url_address,\n\t\tcolors: colors };\n};\n```\n\n# usage for v1.x\n\nYou should have mongoDB running in background as a service or in separate terminal window with \n```bash\nsudo mongod\n```\n\nExample code in unix terminal:\n```bash\nmkdir testproject\ncd testproject\ntouch server.js\nnpm init\nnpm i deployd --save\nnpm i dpd-openshift-start-script --save\ncp node_modules/dpd-openshift-start-script/server.js  ./\nmkdir resources\nnode server.js\n```\n\n# code inside v2.0\n```javascript\n//Author: Patryk \"ipepe\" Ptasiński npm@ipepe.pl, credit to: schettino72\n// ==================== Load dependencies\nvar deployd = require('deployd');\nvar internalClient = require('deployd/lib/internal-client');\nvar url = require('url');\nvar colors = require('colors');\n// ==================== Server Envs\nvar server_env = process.env.NODE_ENV || 'development';\nvar server_port = process.env.OPENSHIFT_NODEJS_PORT || 8080;\nvar server_ip_address = process.env.OPENSHIFT_NODEJS_IP || '127.0.0.1';\n// ==================== Database Envs\nvar db_ip_address = process.env.OPENSHIFT_MONGODB_DB_HOST || server_ip_address;\n// OPENSHIFT DB ADDRESS\nvar db_url_address = process.env.OPENSHIFT_MONGODB_DB_URL || 'mongodb://deployd:deployd@'+db_ip_address+':27017/deployd';\n// HEROKU DB ADDRESS\n// var db_url_address = process.env.MONGOHQ_URL || 'mongodb://deployd:deployd@'+db_ip_address+':27017/deployd';\nvar db_parsed_url = url.parse(db_url_address);\n// ==================== Output current app config\nconsole.log( colors.yellow(server_env) );\nconsole.log( colors.yellow(server_ip_address + ':' + server_port) );\nconsole.log( colors.yellow(db_url_address) );\n// ==================== Configure DeployD instance\nvar dpd_ic;\nvar server = deployd({\n\tport: server_port,\n\tenv: server_env,\n\tdb: {\n\t\thost: db_parsed_url.hostname,\n\t\tport: parseInt(db_parsed_url.port),\n\t\tname: db_parsed_url.pathname.slice(1),\n\t\tcredentials: {\n\t\t\tusername: db_parsed_url.auth.split(':')[0],\n\t\t\tpassword: db_parsed_url.auth.split(':')[1]\n\t\t}\n\t}\n});\n// ==================== Listen\nserver.listen(server_port, server_ip_address);\nserver.on('listening', function() {\n\tdpd_ic = internalClient.build(process.server);\n\tconsole.log( colors.green('Server is listening') );\n});\n// ==================== Catch Errors\nserver.on('error', function(err) {\n\tconsole.error( colors.red(err) );\n\t// Give the server a chance to return an error\n\tprocess.nextTick(function() {\n\t\tprocess.exit();\n\t});\n});\n\nmodule.exports = function () {\n\treturn {\n\t\tdeployd: server,\n\t\tdpd_ic: dpd_ic,\n\t\tserver_env: server_env,\n\t\tserver_port: server_port,\n\t\tserver_ip_address: server_ip_address,\n\t\tdb_ip_address: db_ip_address,\n\t\tdb_url_address: db_url_address,\n\t\tcolors: colors };\n};\n\n```",
  "readmeFilename": "README.md",
  "_id": "dpd-openshift-start-script@2.2.0",
  "_shasum": "cdb7a5f0650499c508be741fb7e5f8d0d58a6ca9",
  "_from": "../../../../var/folders/rg/gdhjmqxj6vb8d8gbtpm2m98h0000gn/T/npm-2365-f17f124d/git-cache-ae77abdb8406/64c139aac3c36b27cf7b6702eaacea10b3df63a1",
  "_resolved": "git://github.com/ipepe/dpd-openshift-start-script#64c139aac3c36b27cf7b6702eaacea10b3df63a1"
}
